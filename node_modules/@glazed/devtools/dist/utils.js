/** @internal */ export function streamIDToString(id) {
    return typeof id === 'string' ? id : id.toString();
}
/** @internal */ export function applyMap(inputs, callFunc) {
    return Object.entries(inputs).reduce((acc, [key, value])=>{
        acc[key] = callFunc(value);
        return acc;
    }, {});
}
/** @internal */ export async function promiseMap(inputs, callFunc) {
    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument
    const results = await Promise.all(Object.values(inputs).map((value)=>callFunc(value)
    ));
    return Object.keys(inputs).reduce((acc, key, i)=>{
        acc[key] = results[i];
        return acc;
    }, {});
}
